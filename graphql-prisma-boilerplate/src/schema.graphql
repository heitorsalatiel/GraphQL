    
    # import UserOrderByInput from './generated/prisma.graphql'

    type Query {
        users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput):[User!]!
        me:User!
    }

    type Mutation {
        createUser (data: CreateUserInput): AuthPayload!
        deleteUser:User!
        updateUser(data:UpdateUserInput): User!
        login(email: String!, password: String!): AuthPayload!
    }

    # type Subscription {
        
    # }

    type AuthPayload {
        token: String!
        user:User!
    }

    input CreateUserInput {
        name: String!
        email: String!
        password: String!
        age: Int
    }

    input UpdateUserInput {
        name: String
        email: String
        age: Int
        password: String
    }

    type User{
        id: ID!
        name: String!
        email: String
        password: String!
        age: Int
        updatedAt: String!
        createdAt: String!
    }

    enum MutationType {
        CREATED
        DELETED
        UPDATED
    }
    